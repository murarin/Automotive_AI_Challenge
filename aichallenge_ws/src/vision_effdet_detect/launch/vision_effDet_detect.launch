<launch>
	<arg name="use_gpu" default="true"/>
	<!-- <arg name="gpu_device_id" default="0"/> -->
	<arg name="score_threshold" default="0.5"/>

	<!-- arguments list -->

	<!-- <arg name="network_definition_file" default="$(env HOME)/ssdcaffe/models/VGGNet/VOC0712/SSD_512x512/deploy.prototxt"/> -->
	<arg name="pretrained_model_file" default="$(find vision_effdet_detect)/data/model_best_75_lib.pt"/>

	<arg name="camera_id" default="front_camera" />
	<arg name="image_src" default="/image/raw" />

	<!-- EFFDET -->
	<node pkg="vision_effdet_detect" name="vision_effDet_detect" type="vision_effDet_detect" output="screen">
		<!-- <param name="network_definition_file" type="str" value="$(arg network_definition_file)"/> -->
		<param name="pretrained_model_file" type="str" value="$(arg pretrained_model_file)"/>
		<param name="use_gpu" type="bool" value="$(arg use_gpu)"/>
		<param name="score_threshold" type="double" value="$(arg score_threshold)"/>
		<!-- <param name="gpu_device_id" type="int" value="$(arg gpu_device_id)"/> -->
		<param name="image_raw_node" type="str" value="$(arg camera_id)$(arg image_src)"/>
	</node>

	<node pkg="detected_objects_visualizer" type="visualize_rects" name="effDet_rects"
				output="screen">
		<!-- <param name="image_src" value="$(arg image_src)"/> -->
		<!-- <param name="image_src" value="$(arg camera_id)$(arg image_src)"/> -->
                <param name="image_src" value="/tlr_superimpose_image"/>
		<param name="image_out" value="/image_rects"/>
		<param name="object_src" value="/detection/image_detector/objects"/> <!-- this is fixed by definition -->
	</node>

</launch>
